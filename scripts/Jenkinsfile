pipeline {
    agent any
    environment {
        SECRET_KEY = credentials('SECRET_KEY')
        DATABASE_URI = credentials('DATABASE_URI')
        DOCKER_LOGIN = credentials('dockerhub_login')
        APP_RUN = 'True'
    }

    stages {
        stage('Setup') {
            steps {
                sh """sudo apt install python3-venv -y
                python3 -m venv venv
                . ./venv/bin/activate
                pip3 install -r requirements.txt
                """
            }
        }
        stage('Test') {
            steps {
                sh""" /home/jenkins/.jenkins/workspace/pipeline-test/venv/bin/python3 -m pytest --junitxml unittests.xml
                /home/jenkins/.jenkins/workspace/pipeline-test/venv/bin/python3 -m pytest --cov-report xml:coverage.xml""" 

            }
        }
        stage('login') {
            steps {
                sh 'echo $DOCKER_LOGIN_PSW | docker login -u $DOCKER_LOGIN_USR --password-stdin'
            }
        }
        stage('Build') {
            steps {
                sh"""docker build -t myapp ."""
            }
        }
        stage('push'){
            steps{
                sh 'docker push corcoran909/myapp:latest'
            }
        }
        stage('Deploy') {
            steps {
                sh """docker run --name myapp -e DATABASE_URI=sqlite:///data.db -e SECRET_KEY=abcd -d -p 5000:5000 myapp"""
            }
        }
        stage('post build') {
            steps{
                junit 'unittests.xml'
                cobertura autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '70, 0, 0', failUnhealthy: false, failUnstable: false, lineCoverageTargets: '80, 0, 0', maxNumberOfBuilds: 0, methodCoverageTargets: '80, 0, 0', onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false
archiveArtifacts artifacts: '*.xml', followSymlinks: false
                
            }
        }
    }   
}
